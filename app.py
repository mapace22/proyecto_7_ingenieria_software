import streamlit as st
import pandas as pd
import plotly_express as px

# T√≠tulo y descripci√≥n
st.set_page_config(page_title="An√°lisis de Veh√≠culos Usados", layout="wide")
st.markdown("### üöó An√°lisis de Datos de Veh√≠culos Usados")
st.write("Explora visualmente los patrones y tendencias en datos reales de ventas de veh√≠culos usados.")

# Cargar datos
try:
    data = pd.read_parquet("data_limpia.parquet")
except FileNotFoundError:
    st.error("‚ùå No se encontr√≥ el archivo 'data_limpia.parquet'. Aseg√∫rate de incluirlo en el mismo repositorio.")
    st.stop()

# Histograma de A√±o del Modelo por Condici√≥n (con interactividad)
st.subheader("Distribuci√≥n de A√±o del Modelo por Condici√≥n")
fig_year_condition = px.histogram(
    data,
    x="model_year",
    color="condition",
    title="Distribuci√≥n de A√±o del Modelo Segmentado por Condici√≥n",
    labels={"model_year": "A√±o del Modelo", "condition": "Condici√≥n"},
    color_discrete_sequence=px.colors.qualitative.Prism
)
st.plotly_chart(fig_year_condition, use_container_width=True)

# --- Separador visual ---
st.markdown("---")

# Histograma comparativo de PRECIOS por MODELO de veh√≠culo
st.subheader("Comparaci√≥n de Precios por Modelo de Veh√≠culo")

# Selecci√≥n de modelos de veh√≠culos
modelos = data['model'].dropna().unique()
modelo1 = st.selectbox("Selecciona modelo 1", sorted(modelos))
modelo2 = st.selectbox("Selecciona modelo 2", sorted(modelos), index=1)

# Filtrar datos por modelo de veh√≠culo
df1 = data[data['model'] == modelo1]
df2 = data[data['model'] == modelo2]

# Crear histograma comparativo de PRECIOS por MODELO de veh√≠culo
fig_comparativo = px.histogram(
    pd.concat([df1.assign(Modelo=modelo1), df2.assign(Modelo=modelo2)]),
    x="price",
    color="Modelo",
    barmode="overlay",
    nbins=50,
    title=f"Comparaci√≥n de Precios: {modelo1} vs {modelo2}",
    color_discrete_sequence=["#FF4B4B", "#00BFFF"]
)

fig_comparativo.update_traces(opacity=0.6)
fig_comparativo.update_layout(xaxis_title="Precio", yaxis_title="Frecuencia")

st.plotly_chart(fig_comparativo, use_container_width=True)

# Gr√°fico de Dispersi√≥n: Precio vs. Kilometraje
st.subheader("Relaci√≥n entre Precio y Kilometraje")
fig_scatter_price_odo = px.scatter(
    data,
    x="odometer",
    y="price",
    title="Gr√°fico de Dispersi√≥n: Precio vs. Kilometraje",
    labels={"odometer": "Kilometraje", "price": "Precio (USD)"},
    trendline="ols"  # A√±ade una l√≠nea de tendencia OLS para visualizar la correlaci√≥n
)
st.plotly_chart(fig_scatter_price_odo, use_container_width=True)

# Nota explicativa sobre la correlaci√≥n
st.markdown(
    """
    **Nota sobre la correlaci√≥n:** En este gr√°fico, la tendencia general suele ser una **correlaci√≥n negativa**, donde los puntos tienden a formar una diagonal descendente de izquierda a derecha. Esto significa que, **en general, a mayor kilometraje de un veh√≠culo usado, menor suele ser su precio.**

    **¬øPor qu√© se observa esta tendencia?**

    * **Desgaste y vida √∫til:** Un mayor kilometraje generalmente indica un mayor uso del veh√≠culo, lo que implica un mayor desgaste de sus componentes (motor, transmisi√≥n, suspensi√≥n, etc.) y una menor vida √∫til restante esperada.
    * **Mayor necesidad de mantenimiento:** Los veh√≠culos con m√°s kil√≥metros recorridos suelen haber requerido y probablemente requerir√°n m√°s mantenimiento y reparaciones, lo que disminuye su valor percibido.
    * **Percepci√≥n del mercado:** Los compradores suelen preferir veh√≠culos con menos kil√≥metros, ya que los perciben como m√°s nuevos y con menos problemas potenciales.

    La l√≠nea de tendencia azul en el gr√°fico ayuda a visualizar esta relaci√≥n general. Sin embargo, es importante recordar que otros factores (como la marca, el modelo, la condici√≥n, el a√±o, el historial de mantenimiento y la demanda del mercado) tambi√©n influyen significativamente en el precio de un veh√≠culo usado, por lo que no siempre se observa una correlaci√≥n perfectamente lineal.
    """
)

# Box Plot del Precio por Condici√≥n
st.subheader("Distribuci√≥n de Precios por Condici√≥n del Veh√≠culo")
fig_box_condition_price = px.box(
    data,
    x="condition",
    y="price",
    title="Box Plot: Precio vs. Condici√≥n del Veh√≠culo",
    labels={"condition": "Condici√≥n", "price": "Precio (USD)"},
    color="condition",
    color_discrete_sequence=px.colors.qualitative.Set2
)
st.plotly_chart(fig_box_condition_price, use_container_width=True)

# Explicaci√≥n del Box Plot
st.markdown(
    """
    **¬øC√≥mo leer este gr√°fico de caja?**

    Este gr√°fico muestra la distribuci√≥n de los precios para cada condici√≥n del veh√≠culo. Cada 'caja' y sus elementos nos dan informaci√≥n importante:

    * **La l√≠nea dentro de la caja:** Representa la **mediana**, que es el precio central. La mitad de los veh√≠culos en esa condici√≥n tienen un precio inferior y la otra mitad superior a este valor.
    * **Los bordes de la caja (cuartiles):** El borde inferior de la caja indica el **primer cuartil** (25% de los precios son inferiores a este valor), y el borde superior indica el **tercer cuartil** (75% de los precios son inferiores a este valor). La altura de la caja (rango intercuart√≠lico) muestra la dispersi√≥n del 50% central de los datos.
    * **Los 'bigotes' (l√≠neas que se extienden desde la caja):** Indican el rango t√≠pico de precios. Los puntos que aparecen fuera de estos bigotes suelen considerarse **valores at√≠picos** (precios inusualmente altos o bajos para esa condici√≥n).

    Al observar este gr√°fico, puedes comparar r√°pidamente los rangos de precios t√≠picos y la presencia de valores at√≠picos entre las diferentes condiciones de los veh√≠culos.
    """
)
